name: Publish
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm install
      - name: Get version from VERSION file
        id: get_version
        run: |
          if [ -f VERSION ]; then
            echo "VERSION=$(cat VERSION)" >> $GITHUB_ENV
          else
            echo "VERSION file not found. Using default version."
            echo "VERSION=latest" >> $GITHUB_ENV
          fi

      - name: Build Docker image
        run: docker build -t gland_qiu .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Tag Docker image
        run: |
          # Ensure VERSION is not empty, default to 'latest' if it is
          TAG_VERSION=${{ env.VERSION }}
          if [ -z "$TAG_VERSION" ]; then
            TAG_VERSION="latest"
          fi
          docker tag gland_qiu ${{ secrets.DOCKER_USERNAME }}/gland_qiu:latest
          docker tag gland_qiu ${{ secrets.DOCKER_USERNAME }}/gland_qiu:$TAG_VERSION
          docker tag gland_qiu ${{ secrets.DOCKER_USERNAME }}/gland_qiu:${{ github.sha }}

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/gland_qiu:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/gland_qiu:${{ env.VERSION }}
          docker push ${{ secrets.DOCKER_USERNAME }}/gland_qiu:${{ github.sha }}

      - name: Clean up
        run: docker system prune -f